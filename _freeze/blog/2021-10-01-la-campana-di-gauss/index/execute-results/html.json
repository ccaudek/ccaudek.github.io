{
  "hash": "5a2894e35abdee2c3f53fa1c3840265b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"La campana di Gauss\"\ndescription: |\n  Una prima occhiata alla distribuzione gaussiana.\nauthor:\n  - name: Corrado Caudek\n    url: {}\ndate: 10-01-2021\noutput:\n  distill::distill_article:\n    self_contained: false\n---\n\n\n\n\n\n\n\nPer iniziare, carichiamo i pacchetti necessari.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\", warn.conflicts = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(\"gghighlight\")\n```\n:::\n\n\n\n\n# Funzione gaussiana\n\nUna funzione gaussiana è una funzione della seguente forma:\n$$\nf(x) = \\frac{1}{\\sigma\\sqrt{2\\pi}} \n  \\exp\\left( -\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^{\\!2}\\,\\right)\n$$\nladdove $\\mu$ e $\\sigma$ sono i paramemtri della distribuzione.\n\nIn `R` la formula diventa:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngauss <- function(x, mu, sigma) {\n  1 / sqrt(2 * pi * sigma^2) * exp(-(x - mu)^2 / (2 * sigma^2)) \n}\n```\n:::\n\n\n\n\nL'area è unitaria, per qualsiasi valore $\\mu$ e $\\sigma$:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea <- integrate(\n  gauss, \n  mu = 100,\n  sigma = 15,\n  lower = -Inf, \n  upper = Inf)$value\narea\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\narea <- integrate(\n  gauss, \n  mu = 0,\n  sigma = 1,\n  lower = -Inf, \n  upper = Inf)$value\narea\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n\nIl fatto che la distribuzione gaussiana dipende dai parametri $\\mu$ e $\\sigma$ significa che, al variare dei parametri, varia la forma della curva di densità: la variazione di $\\mu$ trasla la curva di densità in maniera rigida sull'asse $\\mathbb{R}$; la variazione di $\\sigma$ allarga o appiattisce la curva di densità.\n\nDisegnamo la funzione di densità usando, come parametri, $\\mu$ = 100 e $\\sigma$ = 15 -- ovvero, specifichiamo la distribuzione del QI.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu <- 100\nsigma <- 15\nx <- seq(55, 145, length.out = 1e3)\nplot(x, gauss(x, mu, sigma), type = 'l', ylab = \"Densità\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\nLo stesso risultato si ottene con \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x, dnorm(x, 100, 15), type = 'l', ylab = \"Densità\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## La funzione di ripartizione\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve(\n  pnorm(x), \n  xlim = c(-3.5, 3.5), \n  ylab = \"Probabilità\", \n  main = \"Funzione cumulativa della normale standardizzata\"\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n## Quantili e densità\n\nDefiniamo i seguenti quantili e calcoliamo la densità corrispondente per il caso della normale standardizzata:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquants <- c(-1.96, 0, 1.96)\ngauss(quants, 0, 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.05844094 0.39894228 0.05844094\n```\n\n\n:::\n:::\n\n\n\n\nLo stesso risultato si ottene con \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndnorm(quants, 0, 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.05844094 0.39894228 0.05844094\n```\n\n\n:::\n:::\n\n\n\n\n# La probabilità\n\nCalcoliamo ora le probabilità, ovvero le aree.  Iniziamo con la probabilità $P(X < 115)$ per il QI.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(x = seq(55, 165, length.out = 100)) %>% \n  mutate(y = dnorm(x, mean=100, sd=15))\n\nggplot(df, aes(x, y)) + \n  geom_area(fill = \"sky blue\") + \n  gghighlight(x < 115) +\n  labs(\n    x = \"QI\",\n    y = \"Densità\"\n  ) +\n  papaja::theme_apa()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\nIl risultato cercato è\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nintegrate(\n  gauss, \n  mu = 100,\n  sigma = 15,\n  lower = -Inf, \n  upper = 115)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n0.8413447 with absolute error < 3.8e-06\n```\n\n\n:::\n:::\n\n\n\n\novvero \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(115, 100, 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8413447\n```\n\n\n:::\n:::\n\n\n\n\nConsideriamo ora l'area sottesa alla funzione di densità nell'intervallo $\\mu \\pm 1.96 \\sigma$.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(x = seq(55, 165, length.out = 100)) %>% \n  mutate(y = dnorm(x, mean=100, sd=15))\n\nggplot(df, aes(x, y)) + \n  geom_area(fill = \"sky blue\") + \n  gghighlight(x > 100 - 1.96*15 & x < 100 + 1.96*15) +\n  labs(\n    x = \"QI\",\n    y = \"Densità\"\n  ) +\n  papaja::theme_apa()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\nLa probabilità cercata è\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nintegrate(\n  gauss, \n  mu = 100,\n  sigma = 15,\n  lower = 100 - 1.96*15, \n  upper = 100 + 1.96*15)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n0.9500042 with absolute error < 1e-11\n```\n\n\n:::\n:::\n\n\n\n\novvero\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(100 + 1.96 * 15, 100, 15) - pnorm(100 - 1.96 * 15, 100, 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9500042\n```\n\n\n:::\n:::\n\n\n\n\n\n# Il valore atteso\n\nIl valore atteso di una variabile aleatoria continua $X$ è\n$$\n\\mathbb{E}(X) = \\mu_X = \\int xf_X(x)dx.\n$$\n\nPer calcolare il valore numerico dell'integrale con `R` definiamo la seguente funzione:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- function(x) x * gauss(x, 100, 15)\n```\n:::\n\n\n\n\nPossiamo ora usare `integrate()` per trovare la soluzione che cerchiamo:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nEX <- integrate(\n  g,\n  lower = -Inf,\n  upper = Inf\n)$value\nEX\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100\n```\n\n\n:::\n:::\n\n\n\n\n\n# La varianza\n\nLa varianza di una variabile aleatoria continua $X$ è\n$$\nvar(X) = \\mu_X = \\int (x - \\mu)^2f_X(x)dx.\n$$\nIn `R` definiamo la seguente funzione\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh <- function(x) x^2 * gauss(x, 100, 15)\n```\n:::\n\n\n\n\ne poi calcoliamo l'integrale\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVarX <- integrate(\n  h,\n  lower = -Inf,\n  upper = Inf\n)$value - EX^2 \nVarX\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 225\n```\n\n\n:::\n\n```{.r .cell-code}\nsqrt(VarX)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n:::\n\n\n\n\n\n# L'interpretazione dei parametri\n\nIn conclusione, la distribuzione gaussiana dipende da due parametri: $\\mu$ e $\\sigma^2$. Tali parametri corrispondono al valore atteso (cioè alla media) e alla varianza  (cioè alla dispersione dei valori attorno al massimo della curva) della distribuzione.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}