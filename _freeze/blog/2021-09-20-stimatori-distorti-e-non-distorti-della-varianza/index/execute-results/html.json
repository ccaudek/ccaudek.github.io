{
  "hash": "24401d9898d0239fdf7e702055cfa8fb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Stimatori distorti e non distorti della varianza\"\ndescription: |\n  Dividere per n - 1.\nauthor:\n  - name: Corrado Caudek\n    url: {}\ndate: 09-20-2021\noutput:\n  distill::distill_article:\n    self_contained: false\nategories:\n  - R\n  - Psicometria\n---\n\n\n\n\n\n\n\nCi sono due formule per la varianza:\n\n$$\nS^2 = \\frac{\\sum_{i = 1}^n (X_i - \\bar{X})^2}{n}\n$$\n\ne\n\n$$\ns^2 = \\frac{\\sum_{i = 1}^n (X_i - \\bar{X})^2}{n - 1}\n$$\nLa prima formula è quella di una _statistica_, e si pone il problema di fornire descrizione sintetica di una proprietà del campione -- in questo caso, la varianza.\n\nLa seconda formula è quella di uno _stimatore_,  e si pone l'obiettivo di descrivere, nella maniera più fedele possibile, una proprietà della popolazione -- in questo caso, la varianza -- utilizzando le informazioni presenti nel campione.\n\nLa prima formula, quella con $n$ al denominatore, fallisce nello scopo che la seconda formula si propone di raggiungere (ovvero, l'obiettivo di descrivere le proprietà della popolazione). Infatti, in media, produrrà una stima troppo piccola.  Usiamo una simulazione per esaminare questa faccenda.\n\nIniziamo a definire le proprietà della popolazione.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu <- 100 \nsigma <- 15\n```\n:::\n\n\n\n\n\nDecidiamo, inoltre, di considerare campioni di ampiezza $n$ = 30.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_size <- 30\n```\n:::\n\n\n\n\n\nNel caso di un singolo campione, per esempio, abiamo:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\none_sample <- rnorm(sample_size, mu, sigma) \nmean(one_sample)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100.3135\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(one_sample)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 208.5615\n```\n\n\n:::\n:::\n\n\n\n\n\nMa un singolo campione ci dice poco delle caratteristiche della \"formula\" che stiamo esaminando -- quella che ha $n$ al denominatore. Dato che è facile farlo con R, esaminiamo quello che succede quando consideriamo __un milione__ di campioni:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar_distr <- replicate(\n  1e6,\n    var(\n      rnorm(sample_size, mu, sigma) \n    ) * (sample_size - 1) / sample_size\n)\n```\n:::\n\n\n\n\n\nLa funzione `rnorm()` estrae un campione casuale di ampiezza `sample_size` (ovvero, 30) da una popolazione normale di media 100 e deviazione standard 15.  La varianza della popolazione è dunque\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n15^2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 225\n```\n\n\n:::\n:::\n\n\n\n\n\nLa funzione `var() * (sample_size - 1) / sample_size` calcola la varianza delle 30 osservazioni di un campione utilizzando la prima formula (con $n$ al denominatore).\n\nLa funzione `replicate()` ripete un milione di volte questi calcoli, ovvero calcola la varianza di un milione di campioni casuali di ampiezza 30 estratti da una popolazione normale di media 100 e varianza $15^2$. Ciò significa che l'oggetto `var_distr` conterrà un milione di numeri: le varianze calcolate con la prima formula, per un milione di campioni casuali estratti dalla popolazione di riferimento.\n\nQuanto bene ha funzionato la prima formula? Ovviamente, alcune volte (cioé, per alcuni campioni) meglio, altre volte peggio. Il valore più piccolo che abbiamo ottenuto è\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(var_distr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 44.99443\n```\n\n\n:::\n:::\n\n\n\n\n\ne il valore più grande che abbiamo ottenuto è\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(var_distr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 599.8491\n```\n\n\n:::\n:::\n\n\n\n\n\nIl valore medio -- ovvero, il valore atteso del valore che si ottiene utilizzando la prima formula, è\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(var_distr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 217.5779\n```\n\n\n:::\n:::\n\n\n\n\n\nQuesto valore è chiaramente troppo piccolo.  In altre parole, la prima formula, se venisse usata per stimare la varianza della popolazione produrrebbe una __sottostima__ del valore del parametro cercato.\n\nSi può correggere questo errore sistematico?\n\nCertamente!  E questo è lo scopo della seconda formula, quella con $n - 1$ al denominatore.  Ripetiamo la simulazione usando la seconda formula:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar_distr_c <- replicate(\n  1e6,\n  var(\n    rnorm(sample_size, mu, sigma) \n  )\n)\n```\n:::\n\n\n\n\n\nIn questo caso, il valore atteso è\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(var_distr_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 225.1217\n```\n\n\n:::\n:::\n\n\n\n\n\nuguale al valore del parametro \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n15^2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 225\n```\n\n\n:::\n:::\n\n\n\n\n\nNella simulazione il risultato non è perfetto, ma si capisce che questa è, appunto, una simulazione: aumentando il numero delle ripetizioni si otterrebbe un valore sempre più simile al valore teorico.  Ma non è necessario fare questo. La conclusione è chiara: _la seconda formula ci fornisce uno stimatore corretto_ (ovvero, privo di errore sistematico) _della varianza della popolazione_.  Per questa ragione dividiamo per ($n$ - 1).\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}